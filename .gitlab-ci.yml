stages:
  - lint
  - test
  - build
  - deploy

default:
  image: node:20
  before_script:
    - corepack enable
    - corepack prepare pnpm@latest --activate
    - pnpm install

lint:
  stage: lint
  script:
    - pnpm lint

test:
  stage: test
  script:
    - pnpm test

gitleaks_scan:
  stage: test
  image:
    name: zricethezav/gitleaks:latest
    entrypoint: [""]
  before_script: []
  script:
    - gitleaks detect --source=. --report-format sarif --report-path gitleaks-report.sarif --verbose --redact
  artifacts:
    paths:
      - gitleaks-report.sarif
    expire_in: 1 week
  allow_failure: false

build:frontend:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH == "main"'  # 仅在 main 分支触发构建
  script:
    - echo "📁 当前目录: $(pwd)"
    - echo "📦 列出 apps/in-pages 内容:"
    - ls -la apps/in-pages/
    - echo "📄 apps/in-pages/package.json:"
    - cat apps/in-pages/package.json
    - echo "🔍 检查 pnpm workspace:"
    - pnpm list -r --depth 0 --json | grep '"name": "in-pages"' || echo "Workspace 'in-pages' not found"
    - echo "--- ⛏️ 开始构建 in-pages ---"
    - pnpm build --filter=in-pages
  artifacts:
    paths:
      - apps/in-pages/dist  # 保存构建产物
    expire_in: 1 hour

deploy:pages:
  stage: deploy
  needs: ["build:frontend"]  # 明确依赖 build 阶段
  script:
    - pnpm dlx wrangler pages deploy apps/in-pages/dist --project-name=in-pages --commit-hash=$CI_COMMIT_SHA --commit-message="$CI_COMMIT_MESSAGE"
  environment:
    name: production
  only:
    - main  # 仅主分支部署
